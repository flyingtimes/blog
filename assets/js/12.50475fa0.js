(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{223:function(e,t,a){"use strict";a.r(t);var s=a(0),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"kubernetes-高可用集群安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-高可用集群安装"}},[e._v("#")]),e._v(" kubernetes 高可用集群安装")]),e._v(" "),a("p",[e._v("参考资料")]),e._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/"),a("OutboundLink")],1)])]),e._v(" "),a("h2",{attrs:{id:"kubernetes核心组件组成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes核心组件组成"}},[e._v("#")]),e._v(" Kubernetes核心组件组成")]),e._v(" "),a("ul",[a("li",[e._v("etcd保存了整个集群的状态，采用raft算法，因此最少需要三节点。")]),e._v(" "),a("li",[e._v("apiserver提供了资源操作的唯一入口，并提供认证、授权、访问控制、API注册和发现等机制")]),e._v(" "),a("li",[e._v("controller manager负责维护集群的状态，比如故障检测、自动扩展、滚动更新")]),e._v(" "),a("li",[e._v("scheduler负责资源的调度，按照预定的调度策略将Pod调度到相应的机器上")]),e._v(" "),a("li",[e._v("kubelet负责维护容器的生命周期，同时也负责Volume（CVI）和网络（CNI）的管理")]),e._v(" "),a("li",[e._v("Container runtime负责镜像管理以及Pod和容器的真正运行（CRI）")]),e._v(" "),a("li",[e._v("kube-proxy负责为Service提供cluster内部的服务发现和负载均衡")])]),e._v(" "),a("p",[e._v("除了核心组件，还有一些推荐的Add-ons")]),e._v(" "),a("ul",[a("li",[e._v("kube-dns负责为整个集群提供DNS服务")]),e._v(" "),a("li",[e._v("Ingress Controller为服务提供外网入口")]),e._v(" "),a("li",[e._v("Heapster提供资源监控")]),e._v(" "),a("li",[e._v("Dashboard提供GUI")]),e._v(" "),a("li",[e._v("Federation提供跨可用区的集群")]),e._v(" "),a("li",[e._v("Fluentd-elasticsearch提供集群日志采集、存储与查询")])]),e._v(" "),a("h2",{attrs:{id:"在外网机器上的准备工作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在外网机器上的准备工作"}},[e._v("#")]),e._v(" 在外网机器上的准备工作")]),e._v(" "),a("ul",[a("li",[e._v("外网机器需要拉镜像，因此最好具备翻墙条件")]),e._v(" "),a("li",[e._v("安装好docker")]),e._v(" "),a("li",[e._v("安装 kubeadm")])]),e._v(" "),a("p",[e._v("先到这里确定当前最新的k8s版本\n"),a("a",{attrs:{href:"https://github.com/kubernetes/kubernetes/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/kubernetes/kubernetes/releases"),a("OutboundLink")],1),e._v("\n我在此时看到的最新版本是v1.16.2\nKUBE_VERSION=v1.16.2")]),e._v(" "),a("h3",{attrs:{id:"准备离线镜像文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#准备离线镜像文件"}},[e._v("#")]),e._v(" 准备离线镜像文件")]),e._v(" "),a("p",[e._v("可以通过kubeadmin工具来获取离线镜像文件")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 下载三件套工具集")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("wget")]),e._v(" https://dl.k8s.io/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("KUBE_VERSION"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("/kubernetes-server-linux-amd64.tar.gz\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 添加apt源")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" -s https://packages.cloud.google.com/apt/doc/apt-key.gpg "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" apt-key "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" -\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<<")]),e._v("EOF "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" /etc/apt/sources.list.d/kubernetes.list\ndeb http://apt.kubernetes.io/ kubernetes-xenial main\nEOF\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 安装 docker，kubeadmin")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("apt-get")]),e._v(" update\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("apt-get")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" -y docker.io kubeadm\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 获取相应版本的镜像信息")]),e._v("\nkubeadm config images list --kubernetes-version"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$KUBE_VERSION")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 用kubeadmin工具，生成拉去镜像的配置yml文件")]),e._v("\nkubeadm config print init-defaults "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" kubeadm.yml\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 拉取镜像")]),e._v("\nkubeadm config images pull --config kubeadm.yml\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 将镜像到处成一个压缩包")]),e._v("\ndocker save "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),e._v("docker images "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" -v REPOSITORY "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("awk")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('\'BEGIN{OFS=":";ORS=" "}{print '),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$1")]),e._v(","),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$2")]),e._v("}'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v(" -o k8s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$KUBE_VERSION")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(".tar\n")])])]),a("h3",{attrs:{id:"将生成的镜像倒入到内网"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将生成的镜像倒入到内网"}},[e._v("#")]),e._v(" 将生成的镜像倒入到内网")]),e._v(" "),a("p",[e._v("在内外安装目标主机上")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker load -i k8s{$KUBE_VERSION}.tar\n")])])]),a("h2",{attrs:{id:"k8s集群的配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#k8s集群的配置"}},[e._v("#")]),e._v(" k8s集群的配置")]),e._v(" "),a("p",[e._v("准备好三台centos操作系统的机器，例如app91，app92，app93\n每一台机器都需要做一些预先的配置")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# 打开 ipvs\nmodprobe -- ip_vs\nmodprobe -- ip_vs_rr\nmodprobe -- ip_vs_wrr\nmodprobe -- ip_vs_sh\nmodprobe -- nf_conntrack_ipv4\n# 添加k8s配置文件\ncat <<EOF >  /etc/sysctl.d/k8s.conf\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nEOF\nsysctl --system\n\nsysctl -w net.ipv4.ip_forward=1\nsystemctl stop firewalld && systemctl disable firewalld\nswapoff -a || true\nsetenforce 0 || true\n")])])]),a("h3",{attrs:{id:"解压缩tar文件，然后将二进制文件拷贝到目标路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解压缩tar文件，然后将二进制文件拷贝到目标路径"}},[e._v("#")]),e._v(" 解压缩tar文件，然后将二进制文件拷贝到目标路径")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("tar -xvzf kubernetes-server-linux-amd64.tar.gz\nsudo cp ./kubernetes/server/bin/* /usr/bin/\n")])])]),a("h3",{attrs:{id:"配置-kubelet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置-kubelet"}},[e._v("#")]),e._v(" 配置 kubelet")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('curl -sSL "https://raw.githubusercontent.com/kubernetes/kubernetes/${RELEASE}/build/debs/kubelet.service" | sed "s:/usr/bin:/opt/bin:g" > /etc/systemd/system/kubelet.service\nmkdir -p /etc/systemd/system/kubelet.service.d\ncurl -sSL "https://raw.githubusercontent.com/kubernetes/kubernetes/${RELEASE}/build/debs/10-kubeadm.conf" | sed "s:/usr/bin:/opt/bin:g" > /etc/systemd/system/kubelet.service.d/10-kubeadm.conf \n')])])]),a("p",[e._v("对照上面在内网操作以下脚本")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("sudo mkdir -p /etc/systemd/system/kubelet.service.d\nsudo cp kubelet.service /etc/systemd/system/\nsudo cp 10-kubeadm.conf /etc/systemd/system/kubelet.service.d/\nsystemctl enable --now kubelet\nsystemctl enable --now kubelet\nsystemctl status kubelet\n")])])]),a("h3",{attrs:{id:"启动k8s"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动k8s"}},[e._v("#")]),e._v(" 启动K8S")]),e._v(" "),a("p",[e._v("假设192.169.5.180为master1的ip地址，kube api server 的端口为19999，那么")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('kubeadm init --pod-network-cidr=10.244.0.0/16  \\\n--control-plane-endpoint "192.169.5.180:19999" \\\n--upload-certs --apiserver-advertise-address=0.0.0.0 \\\n--kubernetes-version=v1.16.2\n')])])]),a("p",[e._v("返回的信息很丰富，包含以下几个内容\n你需要把init产生的证书和配置信息，拷贝到你的当前用户下，否则日后kubeadm可能无法正常使用")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Your Kubernetes control-plane has initialized successfully!\n\nTo start using your cluster, you need to run the following as a regular user:\n\n mkdir -p $HOME/.kube\n sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\n")])])]),a("p",[e._v("你可以增加一个master节点")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("You can now join any number of the control-plane node running the following command on each as root:\n\n kubeadm join 192.169.5.180:19999 --token hm0ci6.u8q041ds6a2mktpm \\\n   --discovery-token-ca-cert-hash sha256:109e5cea8a867b6b2ab24147ff1e76399976c127400c42e950ef47b3cfb74579 \\\n   --control-plane --certificate-key 690707d154c80ceed893c6bd8a11520a401fd43df606aeafc27fe64e99b3a67f\n\n")])])]),a("p",[e._v("还可以增加worker节点")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubeadm join 192.169.5.180:19999 --token hm0ci6.u8q041ds6a2mktpm \\\n   --discovery-token-ca-cert-hash sha256:109e5cea8a867b6b2ab24147ff1e76399976c127400c42e950ef47b3cfb74579\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),a("p",[e._v("但是，token 在两小时内会过期。超过两小时操作的话，上面提示的这些内容就无法执行了，要加入集群除了需要 重新生成一个新的token，同时还需要 Master 节点的 ca 证书 sha256 编码 hash 值")])]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#重新建立token")]),e._v("\nkubeadmin token create\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 获取现有证书的sha hash值")]),e._v("\nopenssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" openssl rsa -pubin -outform der "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[e._v("2")]),e._v(">")]),e._v("/dev/null "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" openssl dgst -sha256 -hex "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sed")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'s/^.* //'")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 然后用获取到的token和sha256，替换到join指令里面就行")]),e._v("\n")])])]),a("h3",{attrs:{id:"安装calico网络，以及dashboard"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装calico网络，以及dashboard"}},[e._v("#")]),e._v(" 安装calico网络，以及dashboard")]),e._v(" "),a("p",[e._v("dashboard的安装在 "),a("a",{attrs:{href:"https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/"),a("OutboundLink")],1),e._v(" 有说明")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("curl https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta4/aio/deploy/recommended.yaml -o recommended.yaml\n")])])]),a("p",[e._v("在recommended.yaml将镜像指向本地仓库\n另外在NodePort的配置中添加 nodePort:30000,将端口映射到30000端口")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl create -f calico.yaml\nkubectl create -f recommended.yaml\n")])])]),a("h3",{attrs:{id:"k8s安装ceph支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#k8s安装ceph支持"}},[e._v("#")]),e._v(" k8s安装ceph支持")]),e._v(" "),a("p",[e._v("参照 "),a("a",{attrs:{href:"https://docs.ceph.com/docs/master/rbd/rbd-kubernetes/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://docs.ceph.com/docs/master/rbd/rbd-kubernetes/"),a("OutboundLink")],1),e._v(" 这里的说明按顺序执行yml文件")]),e._v(" "),a("p",[e._v("在相关镜像已经推送到镜像服务器的情况下，可以执行")]),e._v(" "),a("blockquote",[a("p",[e._v("kubectl apply -f csi-config-map.yaml")])]),e._v(" "),a("blockquote",[a("p",[e._v("kubectl apply -f csi-rbd-secret.yaml")])]),e._v(" "),a("blockquote",[a("p",[e._v("kubectl apply -f csi-provisioner-rbac.yaml")])]),e._v(" "),a("blockquote",[a("p",[e._v("kubectl apply -f csi-nodeplugin-rbac.yaml")])]),e._v(" "),a("blockquote",[a("p",[e._v("kubectl apply -f csi-rbdplugin-provisioner.yaml")])]),e._v(" "),a("blockquote",[a("p",[e._v("kubectl apply -f csi-rbdplugin.yaml")])]),e._v(" "),a("blockquote",[a("p",[e._v("kubectl apply -f csi-rbd-sc.yaml")])]),e._v(" "),a("h2",{attrs:{id:"master节点倒了如何重建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#master节点倒了如何重建"}},[e._v("#")]),e._v(" master节点倒了如何重建")]),e._v(" "),a("p",[e._v("我们模拟一个master节点倒了的情况，例如将master的docker关闭了，再重新开起来\n首先，整个集群的状态，要经过一段较长的时间（大概15分钟），才能完全将节点倒掉的情况确认；光看dashboard可能看到的是部分容器还在正常执行，实际已经倒了\n等从dashboard上看到准确的状态以后，这时候不能急着将节点加入回来。因为集群目前还是认为有1个节点只是down了，并没有将这个节点删除的，需要删除节点。")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("kubectl remove node app91\n")])])]),a("p",[e._v("另外，虽然删除了k8s节点，但是etcd也有一个节点倒了，kubectl remove是不会管etcd的（各自可以独立部署的），因此需要手动将异常etcd节点删除。")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 登陆其中一个还活着的etcd容器")]),e._v("\nkubectl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("exec")]),e._v(" -it etcd-app92 "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sh")]),e._v(" -n kube-system\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("ETCDCTL_API")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("alias")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("etcdctl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'etcdctl --endpoints=https://192.169.5.181:2379 --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key'")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 查看etcd节点状态")]),e._v("\netcdctl member list\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 找出已经失效的etcd 删除")]),e._v("\netcdctl member remove xxxxx\n")])])]),a("p",[e._v("将异常的k8s节点从集群中删除")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl remove node app91\n")])])]),a("p",[e._v("然后再重新将节点加入回来就可以了")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubeadm join 192.169.5.180:19999 --token hm0ci6.u8q041ds6a2mktpm \\\n    --discovery-token-ca-cert-hash sha256:109e5cea8a867b6b2ab24147ff1e76399976c127400c42e950ef47b3cfb74579 \\\n    --control-plane\n")])])]),a("h2",{attrs:{id:"部署一个最简单的应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署一个最简单的应用"}},[e._v("#")]),e._v(" 部署一个最简单的应用")]),e._v(" "),a("p",[e._v("我们来创建一个web服务")]),e._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[e._v("FROM python"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("2.7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("alpine\nWORKDIR /root\nCOPY ran.py /root\nCMD python /root/ran.py;python "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("m SimpleHTTPServer 8080\n")])])]),a("p",[e._v("其中，ran.py如下")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" random"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("sys\ndoc "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'/root/index.html'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'w+'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\ndoc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("write"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("random"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("randint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\ndoc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("close"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),a("p",[e._v("build完以后，镜像名称为simpleweb，并将镜像推送到镜像仓库")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("docker tag simpleweb "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("192.169")]),e._v(".5.7:5000/simpleweb:latest\ndocker push "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("192.169")]),e._v(".5.7:5000/simpleweb:latest\n")])])]),a("p",[e._v("然后编写一个deployment")]),e._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Service\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" simplewebservice\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" NodePort\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("8080")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("selector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("app")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" simpleweb\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("---")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" apps/v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Deployment\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" myweb\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("selector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("matchLabels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("app")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" simpleweb\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("app")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" simpleweb\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" 192.169.5.7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("5000/simpleweb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("latest\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" simpleweb\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("containerPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("8080")]),e._v("\n")])])]),a("p",[e._v("部署这个应用")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl create -f simpleweb.yaml\n")])])]),a("p",[e._v("这个时候，可以看到在dashboard上有一个nodePort 的service")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("simplewebservice:31982 TCP\n")])])]),a("p",[e._v("这个31982就是分配在worker节点上的端口号。\n访问每个主机的127.0.0.1:31982，都可以访问到这个应用\n为了便于外部访问，可以开启一个proxy")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kube proxy\n")])])]),a("p",[e._v("这样可以通过以下链接访问")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("http://127.0.0.1:8001/api/v1/namespaces/default/services/simplewebservice/proxy/\n")])])]),a("p",[e._v("访问路径遵循以下规律")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("http://kubernetes_master_address/api/v1/namespaces/namespace_name/services/service_name[:port_name]/proxy\n")])])]),a("p",[e._v("通过以下指令，可以随时扩展多个副本")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl scale --replicas=5 -f simpleweb.yaml\n")])])]),a("h2",{attrs:{id:"tips"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tips"}},[e._v("#")]),e._v(" tips")]),e._v(" "),a("h3",{attrs:{id:"dashboard访问时报证书错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dashboard访问时报证书错误"}},[e._v("#")]),e._v(" dashboard访问时报证书错误")]),e._v(" "),a("p",[e._v("打开 "),a("a",{attrs:{href:"https://127.0.0.1:8080",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://127.0.0.1:8080"),a("OutboundLink")],1),e._v(" 的时候，出现NET::ERR_CERT_INVALID错误")]),e._v(" "),a("ul",[a("li",[e._v("在chrome中输入 chrome://flags/")]),e._v(" "),a("li",[e._v("将 Allow invalid certificates for resources loaded from localhost 改为enable")]),e._v(" "),a("li",[e._v("重新启动浏览器")])]),e._v(" "),a("h3",{attrs:{id:"解决在master节点上无法部署pod的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决在master节点上无法部署pod的问题"}},[e._v("#")]),e._v(" 解决在master节点上无法部署pod的问题")]),e._v(" "),a("p",[e._v("k8s 基于安全考虑，在一般情况下是不能直接在master节点上部署pod的，除非手动解除这个限制。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl taint nodes --all node-role.kubernetes.io/master-\n")])])]),a("h3",{attrs:{id:"控制面haproxy的安装（可选操作）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#控制面haproxy的安装（可选操作）"}},[e._v("#")]),e._v(" 控制面haproxy的安装（可选操作）")]),e._v(" "),a("p",[e._v("如果要确保kube api server 的高可用，需要额外做一个haproxy，确保控制面的高可用访问。例如以下配置将三个master 的 6443 端口，映射到19999端口，这样可以确保19999可以高可用访问控制面")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("yum install haproxy\n")])])]),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("frontend k8s_lb\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("bind")]),e._v(" *:19999\n        mode tcp\n        default_backend controlPlaneNode\nlisten  controlPlaneNode\n        mode tcp\n        option tcplog\n        balance "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("source")]),e._v("\n        server app91 app91:6443 weight "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(" check inter "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2000")]),e._v(" rise "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v(" fall "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v("\n        server app92 app92:6443 weight "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(" check inter "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2000")]),e._v(" rise "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v(" fall "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v("\n        server app93 app93:6443 weight "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(" check inter "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2000")]),e._v(" rise "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v(" fall "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v("\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("service start haproxy\n")])])]),a("h3",{attrs:{id:"kubectl-执行时提示证书错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kubectl-执行时提示证书错误"}},[e._v("#")]),e._v(" kubectl 执行时提示证书错误")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('kubectl get node\nUnable to connect to the server: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "kubernetes")\n')])])]),a("p",[e._v("可能是证书没有拷贝到本地路径下")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nsudo chown $(id -u):$(id -g) $HOME/.kube/config\n")])])]),a("h3",{attrs:{id:"默认的安装控制面总是先尝试拉外网镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#默认的安装控制面总是先尝试拉外网镜像"}},[e._v("#")]),e._v(" 默认的安装控制面总是先尝试拉外网镜像")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('sudo kubeadm init --control-plane-endpoint "LOAD_BALANCER_DNS:LOAD_BALANCER_PORT" --upload-certs\n')])])]),a("h3",{attrs:{id:"访问dashboard的时候需要获取token"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#访问dashboard的时候需要获取token"}},[e._v("#")]),e._v(" 访问dashboard的时候需要获取token")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl -n kube-system describe $(kubectl -n kube-system get secret -n kube-system -o name | grep namespace) | grep token\n")])])]),a("h2",{attrs:{id:"常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[e._v("#")]),e._v(" 常用命令")]),e._v(" "),a("h3",{attrs:{id:"k8s管理应用的命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#k8s管理应用的命令"}},[e._v("#")]),e._v(" k8s管理应用的命令")]),e._v(" "),a("h4",{attrs:{id:"通过yaml文件创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过yaml文件创建"}},[e._v("#")]),e._v(" 通过yaml文件创建")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl create -f xxx.yaml （不建议使用，无法更新，必须先delete）\nkubectl apply -f xxx.yaml （创建+更新，可以重复使用）\n")])])]),a("h4",{attrs:{id:"通过yaml文件删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过yaml文件删除"}},[e._v("#")]),e._v(" 通过yaml文件删除")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl delete -f xxx.yaml\n")])])]),a("h4",{attrs:{id:"查看namespace下面的pod-svc-deployment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看namespace下面的pod-svc-deployment"}},[e._v("#")]),e._v(" 查看namespace下面的pod/svc/deployment")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl get pod /svc/deployment -n kube-system\nkubectl get pod /svc/deployment -n kube-system -o wide （查看存在哪个对应的节点）\n")])])]),a("h4",{attrs:{id:"查看所有namespace下面的pod-svc-deployment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看所有namespace下面的pod-svc-deployment"}},[e._v("#")]),e._v(" 查看所有namespace下面的pod/svc/deployment")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl get pod/svc/deployment --all-namcpaces\n")])])]),a("h4",{attrs:{id:"查看所有pod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看所有pod"}},[e._v("#")]),e._v(" 查看所有pod")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl get pod -n kube-system\n")])])]),a("h4",{attrs:{id:"查看pod描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看pod描述"}},[e._v("#")]),e._v(" 查看pod描述")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl describe pod XXX -n kube-system\n")])])]),a("h4",{attrs:{id:"查看pod-日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看pod-日志"}},[e._v("#")]),e._v(" 查看pod 日志")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl logs xxx -n kube-system（如果pod有多个容器需要加-c 容器名）\n")])])]),a("h4",{attrs:{id:"容器失败的日志查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器失败的日志查询"}},[e._v("#")]),e._v(" 容器失败的日志查询")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl get events -n namespace\n")])])]),a("h4",{attrs:{id:"删除应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除应用"}},[e._v("#")]),e._v(" 删除应用")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl delete deployment xxx -n kube-system\n")])])]),a("h4",{attrs:{id:"根据label删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#根据label删除"}},[e._v("#")]),e._v(" 根据label删除")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl delete pod -l app=flannel -n kube-system\n")])])]),a("h4",{attrs:{id:"扩容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩容"}},[e._v("#")]),e._v(" 扩容")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl scale deployment spark-worker-deployment --replicas=8\n")])])]),a("h4",{attrs:{id:"导出proxy配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导出proxy配置文件"}},[e._v("#")]),e._v(" 导出proxy配置文件")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl get ds -n kube-system -l k8s-app=kube-proxy -o yaml>kube-proxy-ds.yaml\n")])])]),a("h4",{attrs:{id:"导出kube-dns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导出kube-dns"}},[e._v("#")]),e._v(" 导出kube-dns")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl get deployment -n kube-system -l k8s-app=kube-dns -o yaml >kube-dns-dp.yaml\nkubectl get services -n kube-system -l k8s-app=kube-dns -o yaml >kube-dns-services.yaml\n")])])]),a("h4",{attrs:{id:"导出所有-configmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导出所有-configmap"}},[e._v("#")]),e._v(" 导出所有 configmap")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl get configmap -n kube-system -o wide -o yaml > configmap.yaml\n")])])]),a("h3",{attrs:{id:"系统维护命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统维护命令"}},[e._v("#")]),e._v(" 系统维护命令")]),e._v(" "),a("h4",{attrs:{id:"重启kubelet服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重启kubelet服务"}},[e._v("#")]),e._v(" 重启kubelet服务")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("systemctl daemon-reload\nsystemctl restart kubelet\n")])])]),a("p",[e._v("修改启动参数")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("vim /etc/systemd/system/kubelet.service.d/10-kubeadm.conf\n")])])]),a("h4",{attrs:{id:"查看集群信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看集群信息"}},[e._v("#")]),e._v(" 查看集群信息")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl cluster-info\n")])])]),a("h4",{attrs:{id:"查看各组件信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看各组件信息"}},[e._v("#")]),e._v(" 查看各组件信息")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl get componentstatuses\n")])])]),a("h4",{attrs:{id:"查看kubelet进程启动参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看kubelet进程启动参数"}},[e._v("#")]),e._v(" 查看kubelet进程启动参数")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ps -ef | grep kubelet\n")])])]),a("h4",{attrs:{id:"查看日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看日志"}},[e._v("#")]),e._v(" 查看日志")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("sudo journalctl -u kubelet -f\n")])])]),a("h4",{attrs:{id:"设为不可调度状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设为不可调度状态"}},[e._v("#")]),e._v(" 设为不可调度状态")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl cordon node1\n")])])]),a("h4",{attrs:{id:"将pod赶到其他节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将pod赶到其他节点"}},[e._v("#")]),e._v(" 将pod赶到其他节点")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl drain node1\n")])])]),a("h4",{attrs:{id:"解除不可调度状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解除不可调度状态"}},[e._v("#")]),e._v(" 解除不可调度状态")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl uncordon node1\n")])])]),a("h4",{attrs:{id:"node节点处于schedulingdisabled状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node节点处于schedulingdisabled状态"}},[e._v("#")]),e._v(" node节点处于schedulingdisabled状态")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('kubectl patch node app91 -p \'{"spec":{"unschedulable":false}}\'\n')])])]),a("h4",{attrs:{id:"master运行pod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#master运行pod"}},[e._v("#")]),e._v(" master运行pod")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl taint nodes master.k8s node-role.kubernetes.io/master-\n")])])]),a("h4",{attrs:{id:"master不运行pod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#master不运行pod"}},[e._v("#")]),e._v(" master不运行pod")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl taint nodes master.k8s node-role.kubernetes.io/master=:NoSchedule\n")])])]),a("h4",{attrs:{id:"获取集群的基本信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取集群的基本信息"}},[e._v("#")]),e._v(" 获取集群的基本信息")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl cluster-info\nkubectl cluster-info dump\nkubectl get nodes\nkubectl get namespaces\nkubectl get deployment --all-namespaces\nkubectl get svc --all-namespaces\nkubectl get pod\nkubectl get pod -o wide --all-namespaces\nkubectl logs podName\n")])])]),a("h4",{attrs:{id:"创建pod或srv"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建pod或srv"}},[e._v("#")]),e._v(" 创建pod或srv")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl create -f development.yaml\n")])])]),a("h4",{attrs:{id:"检查将要运行的-pod-的资源状况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检查将要运行的-pod-的资源状况"}},[e._v("#")]),e._v(" 检查将要运行的 Pod 的资源状况")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl describe pod podName\n")])])]),a("h4",{attrs:{id:"删除-pod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除-pod"}},[e._v("#")]),e._v(" 删除 Pod")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl delete pod podName\n")])])]),a("h4",{attrs:{id:"pod有多少副本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pod有多少副本"}},[e._v("#")]),e._v(" pod有多少副本")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl get rc\n")])])]),a("h4",{attrs:{id:"扩展-pod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展-pod"}},[e._v("#")]),e._v(" 扩展 Pod")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl scale --replicas=3 rc podName\n")])])]),a("h4",{attrs:{id:"删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除"}},[e._v("#")]),e._v(" 删除")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl delete deployment kubernetes-dashboard --namespace=kube-system\nkubectl delete svc kubernetes-dashboard --namespace=kube-system\nkubectl delete -f kubernetes-dashboard.yaml\n")])])]),a("h4",{attrs:{id:"进入pod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进入pod"}},[e._v("#")]),e._v(" 进入pod")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl exec -ti podName /bin/bash\n")])])]),a("h3",{attrs:{id:"查看类命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看类命令"}},[e._v("#")]),e._v(" 查看类命令")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("获取节点相应服务的信息 ： kubectl get pods 按selector名来查找pod： kubectl get pod --selector name=redis\n查看集群信息： kubectl cluster-info\n查看各组件信息： kubectl -s http://localhost:8080 get componentstatuses 或 kubectl get cs\n查看pods所在的运行节点: kubectl gkubectl get pods -o yamlet pods -o wide\n查看pods定义的详细信息： kubectl get pods -o yaml\n查看运行pod的环境变量： kubectl exec pod名 env\n查看指定pod的日志： kubectl logs -f pods/heapster-xxxxx -n kube-system\n")])])]),a("h3",{attrs:{id:"操作类命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作类命令"}},[e._v("#")]),e._v(" 操作类命令")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("创建资源： kubectl apply -f 文件名.yaml kubectl create -f 文件名.yaml\n重建资源： kubectl replace -f 文件名 [--force]\n删除资源： kubectl delete -f 文件名、kubectl delete pod pod名、kubectl delete rc rc名、kubectl delete service service名\n")])])]),a("h3",{attrs:{id:"kubectl进阶命令操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kubectl进阶命令操作"}},[e._v("#")]),e._v(" kubectl进阶命令操作")]),e._v(" "),a("h4",{attrs:{id:"kubectl-get"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kubectl-get"}},[e._v("#")]),e._v(" kubectl get")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("获取指定资源的基本信息 kubectl get services kubernetes-dashboard -n kube-system #查看所有service\nkubectl get deployment kubernetes-dashboard -n kube-system #查看所有发布\nkubectl get pods --all-namespaces #查看所有pod\nkubectl get pods -o wide --all-namespaces #查看所有pod的IP及节点\nkubectl get pods -n kube-system | grep dashboard\nkubectl get nodes -l zone #获取zone的节点\n")])])]),a("h4",{attrs:{id:"kubectl-describe"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kubectl-describe"}},[e._v("#")]),e._v(" kubectl describe")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('查看指定资源详细描述信息 kubectl describe service/kubernetes-dashboard --namespace="kube-system"\nkubectl describe pods/kubernetes-dashboard-349859023-g6q8c --namespace="kube-system" #指定类型查看\nkubectl describe pod nginx-772ai #查看pod详细信息\nkubectl scale：动态伸缩 kubectl scale rc nginx --replicas=5 # 动态伸缩\nkubectl scale deployment redis-slave --replicas=5 #动态伸缩\nkubectl scale --replicas=2 -f redis-slave-deployment.yaml #动态伸缩\nkubectl exec：进入pod启动的容器 kubectl exec -it redis-master-1033017107-q47hh /bin/bash #进入容器\n')])])]),a("h4",{attrs:{id:"kubectl-label"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kubectl-label"}},[e._v("#")]),e._v(" kubectl label")]),e._v(" "),a("p",[e._v("添加label值 kubectl label nodes node1 zone=north #增加节点lable值 spec.nodeSelector: zone: north #指定pod在哪个节点")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl label pod redis-master-1033017107-q47hh role=master #增加lable值 [key]=[value]\nkubectl label pod redis-master-1033017107-q47hh role- #删除lable值\nkubectl label pod redis-master-1033017107-q47hh role=backend --overwrite #修改lable值\n")])])]),a("h4",{attrs:{id:"kubectl-rolling-update"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kubectl-rolling-update"}},[e._v("#")]),e._v(" kubectl rolling-update")]),e._v(" "),a("p",[e._v("滚动升级")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl rolling-update redis-master -f redis-master-controller-v2.yaml #配置文件滚动升级\nkubectl rolling-update redis-master --image=redis-master:2.0 #命令升级\nkubectl rolling-update redis-master --image=redis-master:1.0 --rollback #pod版本回滚\n")])])]),a("h3",{attrs:{id:"etcdctl常用操作-要进入容器里操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#etcdctl常用操作-要进入容器里操作"}},[e._v("#")]),e._v(" etcdctl常用操作(要进入容器里操作)")]),e._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://www.kubernetes.org.cn/5021.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.kubernetes.org.cn/5021.html"),a("OutboundLink")],1)])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("#检查网络集群健康状态\nETCDCTL_API=3 etcdctl --cacert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key --cert=/etc/kubernetes/pki/etcd/server.crt  endpoint health\n# 检查成员情况\nETCDCTL_API=3 etcdctl --cacert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key --cert=/etc/kubernetes/pki/etcd/server.crt member list\n# 检查性能\nETCDCTL_API=3 etcdctl --cacert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key --cert=/etc/kubernetes/pki/etcd/server.crt check perf \n# 日常操作 get/put\nhttps://etcd.io/docs/v3.3.12/demo/\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);